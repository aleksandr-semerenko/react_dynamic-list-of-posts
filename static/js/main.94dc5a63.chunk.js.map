{"version":3,"sources":["api/api.js","api/posts.js","components/PostsList/PostsList.jsx","api/comments.js","components/NewCommentForm/NewCommentForm.jsx","components/Loader/Loader.jsx","components/PostDetails/PostDetails.jsx","App.jsx","index.js"],"names":["BASE_URL","getUserPosts","userId","fetch","then","response","json","result","data","posts","filter","post","PostsList","onChangePost","useState","currentPostId","setCurrentPostId","changeSelectedPost","id","a","postId","className","map","key","title","type","onClick","getPostComments","comments","comment","removeComment","method","addComment","body","JSON","stringify","NewCommentForm","loadComments","showLoader","name","setName","email","setEmail","setBody","createComment","event","preventDefault","newComment","clearForm","onSubmit","required","value","placeholder","onChange","target","Loader","PostDetails","setComments","commentsVisible","setCommentsVisible","setShowLoader","getComments","deleteComment","useEffect","length","prevState","App","selectedUser","setSelectedUser","setPosts","selectedPost","setSelectedPost","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.94dc5a63.chunk.js","sourcesContent":["export const BASE_URL = 'https://mate-api.herokuapp.com';\n","import { BASE_URL } from './api';\n\nexport const getUserPosts = userId => fetch(`${BASE_URL}/posts/`)\n  .then(response => response.json())\n  .then(result => result.data)\n  .then(posts => (\n    +userId === 0\n      ? posts\n      : posts.filter(post => post.userId === +userId)\n  ));\n\nexport const getPostDetails = postId => fetch(`${BASE_URL}/posts/${postId}`)\n  .then(response => response.json())\n  .then(result => result.data);\n","import React, { useState } from 'react';\nimport PropTypes, { shape } from 'prop-types';\nimport { getPostDetails } from '../../api/posts';\nimport './PostsList.scss';\n\nexport const PostsList = ({ posts, onChangePost }) => {\n  const [currentPostId, setCurrentPostId] = useState(0);\n\n  const changeSelectedPost = async(id) => {\n    const post = await getPostDetails(id);\n\n    onChangePost(post);\n    setCurrentPostId(id);\n  };\n\n  return (\n    <div className=\"PostsList\">\n      <h2>Posts:</h2>\n\n      <ul className=\"PostsList__list\">\n        {posts.map(post => (\n          <li\n            className=\"PostsList__item\"\n            key={post.id}\n          >\n            <div>\n              <b>\n                [User #\n                {post.userId}\n                ]:\n                {' '}\n              </b>\n              {post.title}\n            </div>\n            <button\n              type=\"button\"\n              className=\"PostsList__button button\"\n              onClick={\n                currentPostId === post.id\n                  ? () => changeSelectedPost(0)\n                  : () => changeSelectedPost(post.id)\n              }\n            >\n              {currentPostId === post.id ? 'Close' : 'Open'}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nPostsList.propTypes = {\n  onChangePost: PropTypes.func.isRequired,\n  posts: PropTypes.arrayOf(\n    shape({\n      id: PropTypes.number.isRequired,\n      userId: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      body: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import { BASE_URL } from './api';\n\nexport const getPostComments = postId => fetch(`${BASE_URL}/comments`)\n  .then(response => response.json())\n  .then(result => result.data)\n  .then(comments => comments.filter(comment => comment.postId === postId));\n\nexport async function removeComment(id) {\n  await fetch(`${BASE_URL}/comments/${id}`, { method: 'DELETE' });\n}\n\nexport async function addComment(comment) {\n  await fetch(`${BASE_URL}/comments`, {\n    method: 'POST',\n    body: JSON.stringify(comment),\n  });\n}\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { addComment } from '../../api/comments';\nimport './NewCommentForm.scss';\n\nexport const NewCommentForm = ({ postId, loadComments, showLoader }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [body, setBody] = useState('');\n\n  const createComment = async(event) => {\n    event.preventDefault();\n\n    const newComment = {\n      postId,\n      name,\n      email,\n      body,\n    };\n\n    await addComment(newComment);\n    showLoader(true);\n    loadComments();\n    clearForm();\n  };\n\n  const clearForm = () => {\n    setName('');\n    setBody('');\n    setEmail('');\n  };\n\n  return (\n    <form\n      className=\"NewCommentForm\"\n      onSubmit={createComment}\n    >\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          required\n          value={name}\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          onChange={({ target }) => setName(target.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          required\n          value={email}\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          onChange={({ target }) => setEmail(target.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          required\n          value={body}\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          onChange={({ target }) => setBody(target.value)}\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n\nNewCommentForm.propTypes = {\n  postId: PropTypes.number.isRequired,\n  loadComments: PropTypes.func.isRequired,\n  showLoader: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { NewCommentForm } from '../NewCommentForm';\nimport { Loader } from '../Loader';\nimport { removeComment, getPostComments } from '../../api/comments';\n\nimport './PostDetails.scss';\n\nexport const PostDetails = ({ post }) => {\n  const [comments, setComments] = useState([]);\n  const [commentsVisible, setCommentsVisible] = useState(true);\n  const [showLoader, setShowLoader] = useState(true);\n\n  const onChangeCommentsVisibility = () => {\n    setCommentsVisible(prevState => !prevState);\n  };\n\n  const getComments = () => {\n    (async() => setComments(await getPostComments(post.id)))();\n\n    setShowLoader(false);\n  };\n\n  const deleteComment = async(id) => {\n    setShowLoader(true);\n    await removeComment(id);\n    getComments();\n  };\n\n  useEffect(() => {\n    setShowLoader(true);\n    (async() => setComments(await getPostComments(post.id)))();\n\n    setShowLoader(false);\n  }, [post]);\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n\n      <section className=\"PostDetails__post\">\n        <p>{post.body}</p>\n      </section>\n      {showLoader\n        ? <Loader />\n        : (\n          <section className=\"PostDetails__comments\">\n            {!!comments.length\n              && (\n                <button\n                  type=\"button\"\n                  className=\"button\"\n                  onClick={onChangeCommentsVisibility}\n                >\n                  {commentsVisible\n                    ? `Hide ${comments.length} comments`\n                    : `Show ${comments.length} comments`\n                  }\n                </button>\n              )}\n            {commentsVisible\n              && (\n                <ul className=\"PostDetails__list\">\n                  {comments.map(comment => (\n                    <li\n                      className=\"PostDetails__list-item\"\n                      key={comments.id}\n                    >\n                      <button\n                        type=\"button\"\n                        className=\"PostDetails__remove-button button\"\n                        onClick={() => deleteComment(comment.id)}\n                      >\n                        DELETE\n                      </button>\n                      <p>{comment.body}</p>\n                    </li>\n                  ))}\n                </ul>\n              )\n              }\n          </section>\n        )\n      }\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm\n            postId={post.id}\n            loadComments={getComments}\n            showLoader={setShowLoader}\n          />\n        </div>\n      </section>\n    </div>\n  );\n};\n\nPostDetails.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    userId: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    body: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { Loader } from './components/Loader';\nimport { getUserPosts } from './api/posts';\n\nconst App = () => {\n  const [selectedUser, setSelectedUser] = useState(0);\n  const [posts, setPosts] = useState([]);\n  const [selectedPost, setSelectedPost] = useState(null);\n\n  useEffect(() => {\n    (async() => setPosts(await getUserPosts(selectedUser)))();\n  }, [selectedUser]);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n\n          <select\n            className=\"App__user-selector\"\n            onChange={({ target }) => setSelectedUser(target.value)}\n          >\n            <option value=\"0\">All users</option>\n            <option value=\"1\">Leanne Graham</option>\n            <option value=\"2\">Ervin Howell</option>\n            <option value=\"3\">Clementine Bauch</option>\n            <option value=\"4\">Patricia Lebsack</option>\n            <option value=\"5\">Chelsey Dietrich</option>\n            <option value=\"6\">Mrs. Dennis Schulist</option>\n            <option value=\"7\">Kurtis Weissnat</option>\n            <option value=\"8\">Nicholas Runolfsdottir V</option>\n            <option value=\"9\">Glenna Reichert</option>\n            <option value=\"10\">Leanne Graham</option>\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          {posts.length\n            ? (\n              <div className=\"App__content\">\n                <PostsList\n                  posts={posts}\n                  onChangePost={setSelectedPost}\n                />\n              </div>\n            ) : <Loader />\n          }\n\n        </div>\n        {!!selectedPost\n          && (\n            <div className=\"App__content\">\n              <PostDetails\n                post={selectedPost}\n              />\n            </div>\n          )}\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}